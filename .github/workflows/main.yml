# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - dev
    paths: "cli/**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-cli:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-build-${{ matrix.runtime }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build
      - run: rustup component add clippy
      - name: clippy lints
        run: cargo clippy
      - name: build release Binary
        run: cargo build --release
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ runner.os }} # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./target/release/envwoman
          # The desired behavior if no files are found using the provided path.
